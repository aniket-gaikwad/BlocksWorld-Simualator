package HelperClass;
import java.util.ArrayList;
import java.util.HashMap;

public class environment {

	public ArrayList<Block> BlockList;
	public String FOLFile;
	public String LOGFile;
	public HashMap<String,Block> colorMap=new HashMap<String,Block>();
	
	boolean initiate(ArrayList<Block> BlockList,String FOLFile,String LOGFile){
		// Read user file and create environment
		// Do validation before creating blocks.
		this.BlockList=BlockList;
		this.FOLFile=FOLFile;
		this.LOGFile=LOGFile;
		
		for(Block entry : BlockList){
			if(this.colorMap.containsKey(entry.getColor())){
				System.out.println("\n *** ERROR : Two or more blocks has same color.");
				System.out.println("\n Please give different color to each block in config file");
				System.out.println("\n Exiting the program");
				return false;
			}
			else{
				this.colorMap.put(entry.getColor(),entry);
			}
		}
		display();
		return true;
	}
	
	void move(String color1,String color2){
		Block block1;
		Block block2;
		
		block1 =colorMap.get(color1);
		block2 = colorMap.get(color2);
		if (block1 == block2){
			System.out.println("Both are same Blocks");
		}
		 
		int block1a5 =block1.getX5();
		int block1a6 =block1.getX6();
		int block1a7 =block1.getX7();
		int block1a8 =block1.getX8();
		 
		int block1b5 =block1.getY5();
		int block1b6 =block1.getY6();
		int block1b7 =block1.getY7();
		int block1b8 =block1.getY8();
		 
		int block1c5 =block1.getZ5();
		int block1c6 =block1.getZ6();
		int block1c7 =block1.getZ7();
		int block1c8 =block1.getZ8();
		int block2a1 =block2.getX1();
		int block2a2 =block2.getX2();
		int block2a3 =block2.getX3();
		int block2a4 =block2.getX4();
		 
		int block2b1 =block2.getY1();
		int block2b2 =block2.getY2();
		int block2b3 =block2.getY3();
		int block2b4 =block2.getY4();
		 
		int block2c1 =block2.getZ1();
		int block2c2 =block2.getZ2();
		int block2c3 =block2.getZ3();
		int block2c4 =block2.getZ4();
		 
		int block2Length=block2.getLength();
		int block2Width=block2.getWidth();
		int block2Height=block2.getHeight();
		if (block1.getLength() == block2.getLength())
			if (block1a5 == block2a1 && block1b5 == block2b1 && block1c5 == block2c1 && block1a6 == block2a2 && block1b6 == block2b2 && block1c6 == block2c2 && block1a7 == block2a3 && block1b7 == block2b3 && block1c7 == block2c3 && block1a8 == block2a4 && block1b8 == block2b4 && block1c8 == block2c4){
				System.out.println("The Block is Already Present there");
			}
			else{
				block2.setX1(block1a5);
				block2.setY1(block1b5);
				block2.setZ1(block1c5);
				block2.setX2(block1a6);
				block2.setY2(block1b6);
				block2.setZ2(block1c6);
				block2.setX3(block1a7);
				block2.setY3(block1b7);
				block2.setZ3(block1c7);
				block2.setX4(block1a8);
				block2.setY4(block1b8);
				block2.setZ4(block1c8);
				block2.setX5(block1a5);
				block2.setY5(block1b5 + block2Height);
				block2.setZ5(block1c5);
				block2.setX6(block1a6);
				block2.setY6(block1b6 + block2Height);
				block2.setZ6(block1c6);
				block2.setX7(block1a7);
				block2.setY7(block1b7 + block2Height);
				block2.setZ7(block1c7);
				block2.setX8(block1a8);
				block2.setY8(block1b8 + block2Height);
				block2.setZ8(block1c8);
			}
		
		if (block1.getLength() < block2.getLength()){
			System.out.println("Block 2 is bigger than Block1, So It cannot be placed on smaller cube");
		}
		if (block1.getLength() > block2.getLength())
			if (block1a5 == block2a1 && block1b5 == block2b1 && block1c5 == block2c1 && block1a8 == block2a4 && block1b8 == block2b4 && block1c8 == block2c4){
				System.out.println("The block 2 is already placed on top of block 1");
				
		}
			else{
				block2.setX1(block1a5);
				block2.setY1(block1b5);
				block2.setZ1(block1c5);
				block2.setX2(block1a5 + block2Length);
				block2.setY2(block1b5);
				block2.setZ2(block1c5);
				block2.setX4(block1a8);
				block2.setY4(block1b8);
				block2.setZ4(block1c8);
				block2.setX3(block1a8 + block2Length);
				block2.setY3(block1b8);
				block2.setZ3(block1c8);
				block2.setX5(block1a5);
				block2.setY5(block1b5 + block2Height);
				block2.setZ5(block1c5);
				block2.setX6(block2.getX5() + block2Length);
				block2.setY6(block2.getY5());
				block2.setZ6(block2.getZ5());
				block2.setX8(block1a8);
				block2.setY8(block1b8 + block2Height);
				block2.setZ8(block1c8);
				block2.setX7(block2.getX8() + block2Length);
				block2.setY7(block2.getY8());
				block2.setZ7(block2.getZ8());
				
			}
		}
	
	public void display(){
		for(Block entry : BlockList){
			System.out.println("\n : Next Block Properties :");
			printBlock(entry);
		}
	}
	
	public void printBlock(Block entry){
		System.out.println("\n ID : "+entry.getId());
		System.out.println("\n Color : "+entry.getColor());
		System.out.println("\n Height : "+entry.getHeight());
		System.out.println("\n Width : "+entry.getWidth());
		System.out.println("\n Length : "+entry.getLength());
		System.out.printf("\n x_1 : %d , y_1 : %d , z_1 : %d",entry.getX1(),entry.getY1(),entry.getZ1());
		System.out.printf("\n x_2 : %d , y_2 : %d , z_2 : %d",entry.getX2(),entry.getY2(),entry.getZ2());
		System.out.printf("\n x_3 : %d , y_3 : %d , z_3 : %d",entry.getX3(),entry.getY3(),entry.getZ3());
		System.out.printf("\n x_4 : %d , y_4 : %d , z_4 : %d",entry.getX4(),entry.getY4(),entry.getZ4());
		System.out.printf("\n x_5 : %d , y_5 : %d , z_5 : %d",entry.getX5(),entry.getY5(),entry.getZ5());
		System.out.printf("\n x_6 : %d , y_6 : %d , z_6 : %d",entry.getX6(),entry.getY6(),entry.getZ6());
		System.out.printf("\n x_7 : %d , y_7 : %d , z_7 : %d",entry.getX7(),entry.getY7(),entry.getZ7());
		System.out.printf("\n x_8 : %d , y_8 : %d , z_8 : %d",entry.getX8(),entry.getY8(),entry.getZ8());
	}
}
